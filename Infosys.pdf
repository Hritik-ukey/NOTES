
Q. What is Swagger
Swagger is a set of open-source tools and specifications used for designing, building, documenting, and consuming RESTful APIs. 
It provides a standardized way to describe the structure of an API, allowing developers to easily understand and interact with it. 
Essentially, Swagger helps teams create interactive, machine and human-readable API documentation. 


React based 

1. What is lifecycle methods
Each component in React has a lifecycle which you can monitor and manipulate during its three main phases.

The three phases are: Mounting, Updating, and Unmounting.

Mounting
Mounting means putting elements into the DOM.

Updating
The next phase in the lifecycle is when a component is updated.

A component is updated whenever there is a change in the component's state or props.

Unmounting
The next phase in the lifecycle is when a component is removed from the DOM, or unmounting as React likes to call it.

React has only one built-in method that gets called when a component is unmounted


2. Different types of react hooks
   usestate,usememo,useEffect

3. useReducer hooks
managing complex state logic within a component.

4. Context API 
Context API in React is used to share data across the components without passing the props manually through every level. 
It allows to create global state of data providing global access to all the components.

DBMS : 
Difference bwt data and information
Data is raw, unorganized facts, while information is data that has been processed, 
organized, and given context to become meaningful.



oral on self join
Self joins are used to compare or combine data within the same table,
it creates a virtual table and establishing relationships between the original and virtual tables

Age Marrige Example 

SQL :
DML 
DDL 
Normalize the table 
nth salary


DSA:
string reversal
palindrome or not string 
longest palindrome subsequence
Hashmap check if the array can be split in n/2 (even odd frequency possiblity)
By Candies (By Greedy)
Maximum sum subarray (leetcode submit)
Kadanes Algorithm
SP :
DSA : reverese LL iterative TC & SC 
      Recursive (TC & SC)
DP 




Q. delete drop truncate
   Yes DELETE FROM Employees WHERE EmployeeID = 3;
Q. User Authentication and Authorization Difference

  Authentication : Verifies the users identity
  Authorization : Grants or Denies permission to the users

  Real Life Example : 
  You show your ID (authentication) to security personnel to prove you are who you say you are. 
  Then, you show your boarding pass (authorization) to the flight attendant to board the plane, which is a specific resource. 

Q. Mongodb and its Features
   MongoDB stores data in flexible, JSON-like documents with optional schemas. 
   These documents are organized into collections, which are analogous to tables in a relational database. 

   
   Features: 
             Indexing
             Schemaless
             Support ACID tranisictions


Q. What is MySQL. and Features
   MySQL is an open-source relational database management system (RDBMS) that utilizes Structured Query Language (SQL) for managing and manipulating data. 
   It is widely used as a backend for web applications, content management systems, and various other data-driven systems.


   Features : 
              ACID properties
              High Performance
              Horizontal Scaling 
              raeplication of data is quite easy




Q. Inheritance 

Q. Interface & Polymorphisms
  Contract of Methods that a class must Follow ,without giving their implementation
ðŸ’¡ Example: Think of it like a rulebookâ€”you must follow it, but how you do it is up to you.

  Polymorphism means one function or object behaving differently in different situations."

ðŸ’¡ Example: A function named draw() can work differently for a circle, square, or triangle.

Q. CI/CD 
 CI/CD automates code building, testing, and deployment to deliver software faster and more reliably

 Automatically tests and merges code changes to a shared repository.
 Automatically delivers or deploys tested code to production or staging.

âœ… Goal:
Faster updates, fewer bugs, smooth deployment.

Q. preorder,postorder,inorder


Q. ) B B+ and AVL Tree
  
  B : Balanced multi way searched tree 
      A nodes have more than 2 childrens 
      it maintains its balance by ensuring that all the level 
      of leafe nodes are at the same level making searching,insertion,deletion more efficient.
  
  B+ : Its a varient of B tree only All the data pointers are strored at the leaf Nodes
       for faster serching and indexing.
  
  AVL Tree : A self balance binary search tree always maintain -1,0,1 height of 
             left and right subtree.